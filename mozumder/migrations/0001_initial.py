# Generated by Django 3.1 on 2020-08-13 08:44

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('sessions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Accept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accept_string', models.CharField(db_index=True, max_length=254, unique=True, verbose_name='Accept Encoding String')),
            ],
            options={
                'verbose_name': 'Accept Encoding',
            },
        ),
        migrations.CreateModel(
            name='AccessLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('lookup_time', models.FloatField(blank=True, default=0, null=True, verbose_name='DNS Lookup Time')),
                ('ssl_time', models.FloatField(blank=True, default=0, null=True, verbose_name='SSL Time')),
                ('connect_time', models.FloatField(blank=True, default=0, null=True, verbose_name='Connect Time')),
                ('response_time', models.FloatField(default=0, verbose_name='Response Time')),
                ('log_timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.PositiveSmallIntegerField(verbose_name='HTTP Status Code')),
                ('protocol', models.CharField(choices=[('0', 'Unknown'), ('9', 'HTTP/1.0'), ('1', 'HTTP/1.0'), ('2', 'HTTP/1.1'), ('3', 'HTTP/2'), ('3', 'HTTP/3')], default='0', max_length=1)),
                ('method', models.CharField(choices=[('0', 'UNKNOWN'), ('1', 'GET'), ('2', 'HEAD'), ('3', 'POST'), ('4', 'PUT'), ('5', 'DELETE'), ('6', 'CONNECT'), ('7', 'OPTIONS'), ('8', 'TRACE'), ('9', 'PATCH')], default='1', max_length=1)),
                ('ajax', models.BooleanField(default=False, verbose_name='AJAX Request')),
                ('preview', models.BooleanField(default=False, verbose_name='Preview Request')),
                ('prefetch', models.BooleanField(default=False, verbose_name='Prefetch Request')),
                ('request_content_length', models.PositiveIntegerField(blank=True, null=True)),
                ('response_content_length', models.PositiveIntegerField(blank=True, null=True)),
                ('compress', models.CharField(choices=[('0', 'None'), ('1', 'gzip'), ('2', 'SDCH'), ('3', 'Brotli'), ('4', 'deflate'), ('5', 'Zstd')], default='0', max_length=1)),
                ('cached', models.BooleanField(default=False)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
            options={
                'verbose_name': 'Access Log',
                'verbose_name_plural': 'Accesses',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Arg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('value', models.CharField(blank=True, max_length=80, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Browser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.CharField(db_index=True, max_length=254)),
                ('major_version', models.CharField(blank=True, db_index=True, max_length=254, null=True)),
                ('minor_version', models.CharField(blank=True, db_index=True, max_length=254, null=True)),
                ('patch', models.CharField(blank=True, db_index=True, max_length=254, null=True)),
                ('date_updated', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Choices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=80)),
                ('label', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Contraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('01', 'CheckConstraint'), ('02', 'UniqueContraint')], max_length=2)),
                ('check_function', models.CharField(blank=True, max_length=512, null=True)),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alpha_2', models.CharField(max_length=2, unique=True)),
                ('alpha_3', models.CharField(max_length=3, unique=True)),
                ('numeric', models.CharField(max_length=3, unique=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='CountryLang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=510)),
                ('official_name', models.CharField(blank=True, max_length=500, null=True)),
                ('common_name', models.CharField(blank=True, max_length=140, null=True)),
                ('UN_formal_name', models.CharField(blank=True, max_length=160, null=True)),
                ('UN_short_name', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name': 'Country Lang',
                'verbose_name_plural': 'Countries Lang',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.CharField(blank=True, db_index=True, max_length=254)),
                ('brand', models.CharField(db_index=True, max_length=254, null=True)),
                ('model', models.CharField(blank=True, db_index=True, max_length=254, null=True)),
                ('mobile', models.BooleanField(default=False)),
                ('pc', models.BooleanField(default=False)),
                ('tablet', models.BooleanField(default=False)),
                ('touch', models.BooleanField(default=False)),
                ('bot', models.BooleanField(default=False)),
                ('date_updated', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=80, unique=True, verbose_name='Domain Name')),
                ('bot', models.BooleanField(default=False)),
                ('date_updated', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Domain Name',
            },
        ),
        migrations.CreateModel(
            name='Encoding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encoding_string', models.CharField(db_index=True, max_length=80, unique=True, verbose_name='Request Encoding String')),
            ],
            options={
                'verbose_name': 'Request Encoding',
            },
        ),
        migrations.CreateModel(
            name='ExtraPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('value', models.CharField(blank=True, max_length=80, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HostName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=120, unique=True, verbose_name='Host')),
                ('date_updated', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Host Name',
            },
        ),
        migrations.CreateModel(
            name='Index',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.GenericIPAddressField(db_index=True, unique=True, verbose_name='IP Address')),
                ('bot', models.BooleanField(default=False)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('date_updated', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'IP Address',
                'verbose_name_plural': 'IP Addresses',
            },
        ),
        migrations.CreateModel(
            name='Lang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variant', models.CharField(blank=True, max_length=30, null=True)),
                ('extension', models.CharField(blank=True, max_length=30, null=True)),
                ('private_use', models.CharField(blank=True, max_length=30, null=True)),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='LangLang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_639_3', models.CharField(max_length=3, unique=True)),
                ('iso_639_1', models.CharField(blank=True, max_length=2, null=True, unique=True)),
                ('iso_639_2b', models.CharField(blank=True, max_length=3, null=True, unique=True)),
                ('iso_639_2t', models.CharField(blank=True, max_length=3, null=True, unique=True)),
                ('scope', models.CharField(choices=[('I', 'Individual'), ('M', 'Macrolanguage'), ('S', 'Special')], default='I', max_length=1)),
                ('type', models.CharField(choices=[('A', 'Ancient'), ('C', 'Constructed'), ('E', 'Exctinct'), ('H', 'Historical'), ('L', 'Living'), ('S', 'Special')], default='L', max_length=1)),
            ],
            options={
                'ordering': ['iso_639_3'],
            },
        ),
        migrations.CreateModel(
            name='LanguageCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_string', models.CharField(db_index=True, max_length=80, unique=True, verbose_name='Language String')),
            ],
            options={
                'verbose_name': 'Language Encoding',
            },
        ),
        migrations.CreateModel(
            name='LanguageLang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('print_name', models.CharField(max_length=150)),
                ('inverted_name', models.CharField(max_length=150)),
                ('ref_name', models.BooleanField(default=False)),
                ('comment', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'ordering': ['print_name'],
            },
        ),
        migrations.CreateModel(
            name='Latest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descending', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Locale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocaleLang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='MacroLanguageMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('A', 'Active'), ('R', 'Retired')], default='A', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('code', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MIME',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mime_type_string', models.CharField(db_index=True, max_length=80, unique=True, verbose_name='MIME Type String')),
            ],
            options={
                'verbose_name': 'MIME Type',
            },
        ),
        migrations.CreateModel(
            name='Mixin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('base_class', models.CharField(choices=[('01', 'ContextMixin'), ('02', 'TemplateResponseMixin'), ('03', 'SingleObjectMixin'), ('04', 'SingleObjectTemplateResponseMixin'), ('05', 'MultipleObjectMixin'), ('06', 'MultipleObjectTemplateResponseMixin'), ('07', 'FormMixin'), ('08', 'ModelFormMixin'), ('09', 'DeletionMixin'), ('10', 'YearMixin'), ('11', 'MonthMixin'), ('12', 'DayMixin'), ('13', 'WeekMixin'), ('14', 'DateMixin')], max_length=2)),
                ('extra_context', models.TextField(blank=True, null=True)),
                ('template_name', models.CharField(blank=True, max_length=250, null=True)),
                ('template_engine', models.CharField(blank=True, max_length=250, null=True)),
                ('response_class', models.CharField(blank=True, max_length=250, null=True)),
                ('content_type', models.CharField(blank=True, max_length=250, null=True)),
                ('queryset', models.CharField(blank=True, max_length=250, null=True)),
                ('slug_url_kwarg', models.CharField(blank=True, max_length=250, null=True)),
                ('pk_url_kwarg', models.CharField(blank=True, max_length=250, null=True)),
                ('query_pk_and_slug', models.CharField(blank=True, max_length=250, null=True)),
                ('template_name_suffix', models.CharField(blank=True, max_length=250, null=True)),
                ('ordering', models.CharField(blank=True, max_length=250, null=True)),
                ('paginate_by', models.SmallIntegerField(blank=True, null=True)),
                ('paginate_orphans', models.SmallIntegerField(blank=True, null=True)),
                ('page_kwarg', models.CharField(blank=True, max_length=250, null=True)),
                ('paginator_class', models.CharField(blank=True, max_length=250, null=True)),
                ('context_object_name', models.CharField(blank=True, max_length=250, null=True)),
                ('initial', models.TextField(blank=True, null=True)),
                ('form_class', models.CharField(blank=True, max_length=250, null=True)),
                ('prefix', models.CharField(blank=True, max_length=250, null=True)),
                ('year_format', models.CharField(blank=True, max_length=250, null=True)),
                ('year', models.CharField(blank=True, max_length=250, null=True)),
                ('month_format', models.CharField(blank=True, max_length=250, null=True)),
                ('month', models.CharField(blank=True, max_length=250, null=True)),
                ('day_format', models.CharField(blank=True, max_length=250, null=True)),
                ('day', models.CharField(blank=True, max_length=250, null=True)),
                ('week_format', models.CharField(blank=True, max_length=250, null=True)),
                ('week', models.CharField(blank=True, max_length=250, null=True)),
                ('allow_future', models.BooleanField(blank=True, null=True)),
                ('allow_empty', models.BooleanField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ordering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descending', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='OS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.CharField(db_index=True, max_length=254)),
                ('major_version', models.CharField(blank=True, db_index=True, max_length=254, null=True)),
                ('minor_version', models.CharField(blank=True, db_index=True, max_length=254, null=True)),
                ('patch', models.CharField(blank=True, db_index=True, max_length=254, null=True)),
                ('minor_patch', models.CharField(blank=True, db_index=True, max_length=254, null=True)),
                ('date_updated', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Operating System',
            },
        ),
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_path', models.CharField(db_index=True, max_length=254, unique=True, verbose_name='Search Path String')),
            ],
            options={
                'verbose_name': 'Search Path',
            },
        ),
        migrations.CreateModel(
            name='QueryString',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_string', models.CharField(db_index=True, max_length=254, unique=True, verbose_name='Query String')),
            ],
            options={
                'verbose_name': 'Query String',
            },
        ),
        migrations.CreateModel(
            name='RetiredLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_639_3', models.CharField(max_length=3, unique=True)),
                ('ref_name', models.CharField(max_length=150)),
                ('reason', models.CharField(choices=[('C', 'Change'), ('D', 'Duplicate'), ('N', 'Nonexistent'), ('S', 'Split'), ('M', 'Merge')], default='C', max_length=1)),
                ('change_to', models.CharField(blank=True, max_length=3, null=True)),
                ('ret_remedy', models.CharField(blank=True, max_length=300, null=True)),
                ('effective_date', models.DateField(default=datetime.date.today)),
            ],
            options={
                'ordering': ['iso_639_3'],
            },
        ),
        migrations.CreateModel(
            name='Script',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_15294', models.CharField(max_length=4, unique=True)),
                ('code_number', models.CharField(max_length=3, unique=True)),
                ('unicode_alias', models.CharField(max_length=75)),
                ('unicode_version', models.CharField(max_length=4)),
                ('version_date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='SessionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, db_index=True, max_length=40, null=True, unique=True)),
                ('start_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, null=True)),
                ('expire_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('bot', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Session Log',
                'verbose_name_plural': 'Sessions',
            },
        ),
        migrations.CreateModel(
            name='Subdivision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='country_subdivisions', to='mozumder.country')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subdivisions', to='mozumder.subdivision')),
            ],
        ),
        migrations.CreateModel(
            name='SubdivisionType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='TrackedApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='TrackedField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('type', models.CharField(choices=[('01', 'AutoField'), ('02', 'BigAutoField'), ('03', 'BigIntegerField'), ('04', 'BinaryField'), ('05', 'BooleanField'), ('06', 'CharField'), ('07', 'DateField'), ('08', 'DateTimeField'), ('09', 'DecimalField'), ('10', 'DurationField'), ('11', 'EmailField'), ('12', 'FileField'), ('13', 'FilePathField'), ('14', 'FloatField'), ('15', 'ImageField'), ('16', 'IntegerField'), ('17', 'GenericIpAddressField'), ('18', 'NullBooleanField'), ('19', 'PositiveIntegerField'), ('20', 'PositiveSmallIntegerField'), ('21', 'SlugField'), ('22', 'SmallAutoField'), ('23', 'SmallIntegerField'), ('24', 'TextField'), ('25', 'URLField'), ('26', 'UUIDField'), ('27', 'ForeignKey'), ('28', 'ManyToManyField'), ('29', 'OneToOneField'), ('30', 'ArrayField'), ('31', 'CIText'), ('32', 'HStoreField'), ('33', 'JSONField'), ('34', 'IntegerRangeField'), ('35', 'BigIntegerRangeField'), ('36', 'DecimalRangeField'), ('37', 'FloatRangeField'), ('38', 'DateTimeRangeField'), ('39', 'DateRangeField')], max_length=2)),
                ('verbose_name', models.CharField(blank=True, max_length=80, null=True)),
                ('auto_created', models.BooleanField(blank=True, null=True)),
                ('serialize', models.BooleanField(blank=True, null=True)),
                ('primary_key', models.BooleanField(blank=True, null=True)),
                ('null', models.BooleanField(blank=True, null=True)),
                ('blank', models.BooleanField(blank=True, null=True)),
                ('db_index', models.BooleanField(blank=True, null=True)),
                ('db_column', models.CharField(blank=True, max_length=80, null=True)),
                ('db_tablespace', models.CharField(blank=True, max_length=80, null=True)),
                ('editable', models.BooleanField(blank=True, null=True)),
                ('show_in_detail_view', models.BooleanField(blank=True, null=True)),
                ('show_in_list_view', models.BooleanField(blank=True, null=True)),
                ('link_in_list_view', models.BooleanField(blank=True, null=True)),
                ('admin_readonly_field', models.BooleanField(blank=True, null=True)),
                ('admin_search', models.BooleanField(blank=True, null=True)),
                ('unique', models.BooleanField(blank=True, null=True)),
                ('unique_for_date', models.BooleanField(blank=True, null=True)),
                ('unique_for_month', models.BooleanField(blank=True, null=True)),
                ('unique_for_year', models.BooleanField(blank=True, null=True)),
                ('default_bool', models.BooleanField(blank=True, null=True)),
                ('default_text', models.TextField(blank=True, null=True)),
                ('default_smallint', models.SmallIntegerField(blank=True, null=True)),
                ('default_bigint', models.BigIntegerField(blank=True, null=True)),
                ('default_int', models.IntegerField(blank=True, null=True)),
                ('default_posint', models.PositiveIntegerField(blank=True, null=True)),
                ('default_possmallint', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('default_datetime', models.DateTimeField(blank=True, null=True)),
                ('default_float', models.FloatField(blank=True, null=True)),
                ('default_decimal', models.DecimalField(blank=True, decimal_places=18, max_digits=18, null=True)),
                ('max_length', models.SmallIntegerField(blank=True, null=True)),
                ('to', models.CharField(blank=True, max_length=80, null=True)),
                ('on_delete', models.CharField(blank=True, choices=[('01', 'CASCADE'), ('02', 'PROTECT'), ('03', 'SET_NULL'), ('04', 'SET_DEFAULT'), ('05', 'SET'), ('06', 'DO_NOTHING')], max_length=2, null=True)),
                ('related_name', models.CharField(blank=True, max_length=80, null=True)),
                ('related_query_name', models.CharField(blank=True, max_length=80, null=True)),
                ('limit_choices_to', models.TextField(blank=True, null=True)),
                ('to_field', models.CharField(blank=True, max_length=80, null=True)),
                ('symmetrical', models.BooleanField(blank=True, null=True)),
                ('through', models.CharField(blank=True, max_length=80, null=True)),
                ('through_fields_source', models.CharField(blank=True, max_length=80, null=True)),
                ('through_fields_target', models.CharField(blank=True, max_length=80, null=True)),
                ('db_table', models.CharField(blank=True, max_length=80, null=True)),
                ('db_constraint', models.BooleanField(blank=True, null=True)),
                ('swappable', models.BooleanField(blank=True, null=True)),
                ('parent_link', models.BooleanField(blank=True, null=True)),
                ('auto_now', models.BooleanField(blank=True, null=True)),
                ('auto_now_add', models.BooleanField(blank=True, null=True)),
                ('max_digits', models.SmallIntegerField(blank=True, null=True)),
                ('decimal_places', models.SmallIntegerField(blank=True, null=True)),
                ('upload_to', models.CharField(blank=True, max_length=255, null=True)),
                ('protocol', models.CharField(blank=True, choices=[('01', 'both'), ('02', 'IPv4'), ('03', 'IPv6')], max_length=2, null=True)),
                ('unpack_ipv4', models.BooleanField(blank=True, null=True)),
                ('sllow_unicode', models.BooleanField(blank=True, null=True)),
                ('choices', models.ManyToManyField(to='mozumder.Choices')),
            ],
        ),
        migrations.CreateModel(
            name='TrackedModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('verbose_name', models.CharField(max_length=80)),
                ('verbose_name_plural', models.CharField(max_length=80)),
                ('abstract', models.BooleanField(blank=True, null=True)),
                ('app_label', models.CharField(blank=True, max_length=80, null=True)),
                ('base_manager_name', models.CharField(blank=True, max_length=80, null=True)),
                ('db_table', models.CharField(blank=True, max_length=80, null=True)),
                ('db_tablespace', models.CharField(blank=True, max_length=80, null=True)),
                ('default_manager_name', models.CharField(blank=True, max_length=80, null=True)),
                ('default_related_name', models.CharField(blank=True, max_length=80, null=True)),
                ('managed', models.BooleanField(blank=True, null=True)),
                ('proxy', models.BooleanField(blank=True, null=True)),
                ('default_permissions', models.ManyToManyField(to='auth.Permission')),
                ('get_latest_by', models.ManyToManyField(related_name='latest_fields', through='mozumder.Latest', to='mozumder.TrackedField')),
                ('methods', models.ManyToManyField(to='mozumder.Method')),
                ('mixins', models.ManyToManyField(to='mozumder.Mixin')),
                ('order_with_respect_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordered_with_respect_to_field', to='mozumder.trackedfield')),
                ('ordering', models.ManyToManyField(related_name='ordering_fields', through='mozumder.Ordering', to='mozumder.TrackedField')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mozumder.trackedapp')),
                ('permissions', models.ManyToManyField(to='mozumder.ExtraPermission')),
            ],
        ),
        migrations.CreateModel(
            name='UserAgent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_agent_string', models.CharField(db_index=True, max_length=254, unique=True, verbose_name='User Agent String')),
                ('bot', models.BooleanField(default=False)),
                ('date_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('browser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mozumder.browser', verbose_name='Browser')),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mozumder.device', verbose_name='Device')),
                ('os', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mozumder.os', verbose_name='OS')),
            ],
            options={
                'verbose_name': 'User Agent',
            },
        ),
        migrations.CreateModel(
            name='URL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=510, unique=True)),
                ('scheme', models.BooleanField(default=True)),
                ('port', models.SmallIntegerField(blank=True, null=True)),
                ('date_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('authority', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mozumder.hostname')),
                ('canonical', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mozumder.url')),
                ('path', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mozumder.path')),
                ('query_string', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mozumder.querystring')),
            ],
            options={
                'verbose_name': 'URL',
            },
        ),
        migrations.CreateModel(
            name='TrackedView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('class_based_view', models.BooleanField(blank=True, null=True)),
                ('base_class', models.CharField(choices=[('00', 'None'), ('01', 'View'), ('02', 'TempalateView'), ('03', 'RedirectView'), ('04', 'DetailView'), ('05', 'BaseDetailView'), ('06', 'ListView'), ('07', 'BaseListView'), ('08', 'FormView'), ('09', 'BaseFormView'), ('10', 'ProcessFormView'), ('11', 'CreateView'), ('12', 'BaseCreateView'), ('13', 'UpdateView'), ('14', 'BaseUpdateView'), ('15', 'DeleteView'), ('16', 'BaseDeleteView'), ('17', 'ArchiveIndexView'), ('18', 'BaseArchiveIndexView'), ('19', 'BaseDateListView'), ('20', 'YearArchiveView'), ('21', 'BaseYearArchiveView'), ('22', 'MonthArchiveView'), ('23', 'BaseMonthArchiveView'), ('24', 'WeekArchiveView'), ('25', 'BaseWeekArchiveView'), ('26', 'DayArchiveView'), ('27', 'BaseDayArchiveView'), ('28', 'TodayArchiveView'), ('29', 'BaseTodayArchiveView'), ('30', 'DateDetailView'), ('31', 'BaseDateDetailView')], max_length=2)),
                ('url_name', models.CharField(max_length=250)),
                ('api_url', models.BooleanField(default=False)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('pattern', models.CharField(blank=True, max_length=250, null=True)),
                ('permanent', models.BooleanField(blank=True, null=True)),
                ('query_string', models.BooleanField(blank=True, null=True)),
                ('object', models.CharField(blank=True, max_length=250, null=True)),
                ('success_url', models.CharField(blank=True, max_length=250, null=True)),
                ('extra_context', models.TextField(blank=True, null=True)),
                ('template_name', models.CharField(blank=True, max_length=250, null=True)),
                ('template_engine', models.CharField(blank=True, max_length=250, null=True)),
                ('response_class', models.CharField(blank=True, max_length=250, null=True)),
                ('content_type', models.CharField(blank=True, max_length=250, null=True)),
                ('queryset', models.CharField(blank=True, max_length=250, null=True)),
                ('slug_url_kwarg', models.CharField(blank=True, max_length=250, null=True)),
                ('pk_url_kwarg', models.CharField(blank=True, max_length=250, null=True)),
                ('query_pk_and_slug', models.CharField(blank=True, max_length=250, null=True)),
                ('template_name_suffix', models.CharField(blank=True, max_length=250, null=True)),
                ('ordering', models.CharField(blank=True, max_length=250, null=True)),
                ('paginate_by', models.SmallIntegerField(blank=True, null=True)),
                ('paginate_orphans', models.SmallIntegerField(blank=True, null=True)),
                ('page_kwarg', models.CharField(blank=True, max_length=250, null=True)),
                ('paginator_class', models.CharField(blank=True, max_length=250, null=True)),
                ('context_object_name', models.CharField(blank=True, max_length=250, null=True)),
                ('initial', models.TextField(blank=True, null=True)),
                ('form_class', models.CharField(blank=True, max_length=250, null=True)),
                ('prefix', models.CharField(blank=True, max_length=250, null=True)),
                ('year_format', models.CharField(blank=True, max_length=250, null=True)),
                ('year', models.CharField(blank=True, max_length=250, null=True)),
                ('month_format', models.CharField(blank=True, max_length=250, null=True)),
                ('month', models.CharField(blank=True, max_length=250, null=True)),
                ('day_format', models.CharField(blank=True, max_length=250, null=True)),
                ('day', models.CharField(blank=True, max_length=250, null=True)),
                ('week_format', models.CharField(blank=True, max_length=250, null=True)),
                ('week', models.CharField(blank=True, max_length=250, null=True)),
                ('allow_future', models.BooleanField(blank=True, null=True)),
                ('allow_empty', models.BooleanField(blank=True, null=True)),
                ('date_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='view_date_field', to='mozumder.trackedfield')),
                ('fields', models.ManyToManyField(related_name='view_model_form_fields', to='mozumder.TrackedField')),
                ('methods', models.ManyToManyField(to='mozumder.Method')),
                ('mixins', models.ManyToManyField(to='mozumder.Mixin')),
                ('model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mozumder.trackedmodel')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mozumder.trackedapp')),
                ('slug_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='view_slug_field', to='mozumder.trackedfield')),
                ('template_name_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='view_template_name_field', to='mozumder.trackedfield')),
            ],
        ),
        migrations.AddField(
            model_name='trackedfield',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mozumder.trackedmodel'),
        ),
        migrations.CreateModel(
            name='SubdivisionTypeLang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('lang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subdivision_type_langs', to='mozumder.lang')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subdivision_types', to='mozumder.subdivisiontype')),
            ],
        ),
        migrations.CreateModel(
            name='SubdivisionLang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('lang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subdivision_langs', to='mozumder.lang')),
                ('subdivision', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subdivision_names', to='mozumder.subdivision')),
            ],
        ),
        migrations.AddField(
            model_name='subdivision',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subdivisions', to='mozumder.subdivisiontype'),
        ),
        migrations.CreateModel(
            name='ScriptLang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('lang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='script_langs', to='mozumder.lang')),
                ('script', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='names', to='mozumder.script')),
            ],
        ),
        migrations.AddConstraint(
            model_name='os',
            constraint=models.UniqueConstraint(fields=('family', 'major_version', 'minor_version', 'patch', 'minor_patch'), name='os_unique'),
        ),
        migrations.AddField(
            model_name='ordering',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_ordering_model', to='mozumder.trackedmodel'),
        ),
        migrations.AddField(
            model_name='ordering',
            name='target_field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mozumder.trackedfield'),
        ),
        migrations.AddField(
            model_name='mixin',
            name='date_field',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mixin_date_field', to='mozumder.trackedfield'),
        ),
        migrations.AddField(
            model_name='mixin',
            name='fields',
            field=models.ManyToManyField(related_name='mixin_model_form_fields', to='mozumder.TrackedField'),
        ),
        migrations.AddField(
            model_name='mixin',
            name='methods',
            field=models.ManyToManyField(to='mozumder.Method'),
        ),
        migrations.AddField(
            model_name='mixin',
            name='model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mozumder.trackedmodel'),
        ),
        migrations.AddField(
            model_name='mixin',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mozumder.trackedapp'),
        ),
        migrations.AddField(
            model_name='mixin',
            name='slug_field',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mixin_slug_field', to='mozumder.trackedfield'),
        ),
        migrations.AddField(
            model_name='mixin',
            name='template_name_field',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mixin_template_name_field', to='mozumder.trackedfield'),
        ),
        migrations.AddField(
            model_name='method',
            name='args',
            field=models.ManyToManyField(related_name='function_args', to='mozumder.TrackedField'),
        ),
        migrations.AddField(
            model_name='method',
            name='kwargs',
            field=models.ManyToManyField(related_name='function_kwargs', to='mozumder.TrackedField'),
        ),
        migrations.AddField(
            model_name='macrolanguagemapping',
            name='individual_language',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='individuallangs', to='mozumder.language'),
        ),
        migrations.AddField(
            model_name='macrolanguagemapping',
            name='macrolanguage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='macrolangs', to='mozumder.language'),
        ),
        migrations.AddField(
            model_name='macrolanguagemapping',
            name='retired_individual_language',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='macrolanguages', to='mozumder.retiredlanguage'),
        ),
        migrations.AddField(
            model_name='localelang',
            name='lang',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locale_langs', to='mozumder.lang'),
        ),
        migrations.AddField(
            model_name='localelang',
            name='locale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='names', to='mozumder.locale'),
        ),
        migrations.AddField(
            model_name='locale',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locales', to='mozumder.country'),
        ),
        migrations.AddField(
            model_name='locale',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locales', to='mozumder.language'),
        ),
        migrations.AddField(
            model_name='locale',
            name='script',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locales', to='mozumder.script'),
        ),
        migrations.AddField(
            model_name='latest',
            name='latest_field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mozumder.trackedfield'),
        ),
        migrations.AddField(
            model_name='latest',
            name='latest_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mozumder.trackedmodel'),
        ),
        migrations.AddField(
            model_name='languagelang',
            name='lang',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='name_langs', to='mozumder.lang'),
        ),
        migrations.AddField(
            model_name='languagelang',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lang_codes', to='mozumder.language'),
        ),
        migrations.AddField(
            model_name='langlang',
            name='lang',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='langs', to='mozumder.lang'),
        ),
        migrations.AddField(
            model_name='langlang',
            name='namedlang',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='namedlangs', to='mozumder.lang'),
        ),
        migrations.AddField(
            model_name='lang',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='langs', to='mozumder.country'),
        ),
        migrations.AddField(
            model_name='lang',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='langs', to='mozumder.language'),
        ),
        migrations.AddField(
            model_name='lang',
            name='script',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='langs', to='mozumder.script'),
        ),
        migrations.AddField(
            model_name='ip',
            name='host',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mozumder.hostname', verbose_name='Host'),
        ),
        migrations.AddField(
            model_name='index',
            name='fields',
            field=models.ManyToManyField(to='mozumder.TrackedField'),
        ),
        migrations.AddField(
            model_name='hostname',
            name='domain',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mozumder.domain', verbose_name='Domain'),
        ),
        migrations.AddConstraint(
            model_name='device',
            constraint=models.UniqueConstraint(fields=('brand', 'family', 'model'), name='device_unique'),
        ),
        migrations.AddField(
            model_name='countrylang',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='country_names', to='mozumder.country'),
        ),
        migrations.AddField(
            model_name='countrylang',
            name='lang',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='country_langs', to='mozumder.lang'),
        ),
        migrations.AddField(
            model_name='contraint',
            name='unique_fields',
            field=models.ManyToManyField(to='mozumder.TrackedField'),
        ),
        migrations.AddConstraint(
            model_name='browser',
            constraint=models.UniqueConstraint(fields=('family', 'major_version', 'minor_version', 'patch'), name='browser_unique'),
        ),
        migrations.AddField(
            model_name='accesslog',
            name='accept_encoding',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mozumder.encoding'),
        ),
        migrations.AddField(
            model_name='accesslog',
            name='accept_language',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mozumder.languagecode'),
        ),
        migrations.AddField(
            model_name='accesslog',
            name='accept_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mozumder.accept'),
        ),
        migrations.AddField(
            model_name='accesslog',
            name='ip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mozumder.ip', verbose_name='IP Address'),
        ),
        migrations.AddField(
            model_name='accesslog',
            name='referer_url',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accesslog_referer_url', to='mozumder.url', verbose_name='Referer'),
        ),
        migrations.AddField(
            model_name='accesslog',
            name='request_content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accesslog_request_content_type', to='mozumder.mime'),
        ),
        migrations.AddField(
            model_name='accesslog',
            name='request_url',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accesslog_request_url', to='mozumder.url', verbose_name='Request URL'),
        ),
        migrations.AddField(
            model_name='accesslog',
            name='response_content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accesslog_response_content_type', to='mozumder.mime'),
        ),
        migrations.AddField(
            model_name='accesslog',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sessions.session'),
        ),
        migrations.AddField(
            model_name='accesslog',
            name='session_log',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mozumder.sessionlog'),
        ),
        migrations.AddField(
            model_name='accesslog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accesslog',
            name='user_agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mozumder.useragent'),
        ),
        migrations.AddConstraint(
            model_name='subdivisiontypelang',
            constraint=models.UniqueConstraint(fields=('type', 'lang'), name='subdivisiontypelang_unique'),
        ),
        migrations.AddConstraint(
            model_name='subdivisionlang',
            constraint=models.UniqueConstraint(fields=('subdivision', 'lang'), name='subdivisionlang_unique'),
        ),
        migrations.AddConstraint(
            model_name='subdivision',
            constraint=models.UniqueConstraint(fields=('code', 'country'), name='subdivision_unique'),
        ),
        migrations.AddConstraint(
            model_name='scriptlang',
            constraint=models.UniqueConstraint(fields=('script', 'lang'), name='scriptlang_uniquetogether'),
        ),
        migrations.AddConstraint(
            model_name='macrolanguagemapping',
            constraint=models.UniqueConstraint(fields=('macrolanguage', 'individual_language'), name='individualmacrolanguage_uniquetogether'),
        ),
        migrations.AddConstraint(
            model_name='macrolanguagemapping',
            constraint=models.UniqueConstraint(fields=('macrolanguage', 'retired_individual_language'), name='retiredindividualmacrolanguage_uniquetogether'),
        ),
        migrations.AddConstraint(
            model_name='localelang',
            constraint=models.UniqueConstraint(fields=('locale', 'lang'), name='localelang_uniquetogether'),
        ),
        migrations.AddConstraint(
            model_name='locale',
            constraint=models.UniqueConstraint(fields=('language', 'script', 'country'), name='locale_uniquetogether'),
        ),
        migrations.AddConstraint(
            model_name='languagelang',
            constraint=models.UniqueConstraint(fields=('language', 'lang', 'print_name'), name='languagelang_uniquetogether'),
        ),
        migrations.AddConstraint(
            model_name='langlang',
            constraint=models.UniqueConstraint(fields=('namedlang', 'lang'), name='langlang_uniquetogether'),
        ),
        migrations.AddConstraint(
            model_name='lang',
            constraint=models.UniqueConstraint(fields=('language', 'script', 'country', 'variant', 'extension', 'private_use'), name='lang_uniquetogether'),
        ),
        migrations.AddConstraint(
            model_name='countrylang',
            constraint=models.UniqueConstraint(fields=('country', 'lang'), name='countrylang_unique'),
        ),
    ]
